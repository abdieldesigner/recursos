/*<!-- CSS v√≠a jsDelivr -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/gh/abdieldesigner/recursos@main/abdiel-css.css">

<!-- JS v√≠a jsDelivr -->
<script src="https://cdn.jsdelivr.net/gh/abdieldesigner/recursos@main/abdiel-js.js" defer></script>


limpiar cache repositorio:

https://purge.jsdelivr.net/gh/abdieldesigner/recursos@main/abdiel-css.css
https://purge.jsdelivr.net/gh/abdieldesigner/recursos@main/abdiel-js.js

*/

/* =========================================
   INICIA CSS: EVITAR DESBORDE (layout global)
   ========================================= */
/* Evita scroll horizontal por desbordes y permite que el contenido vertical se vea.
   Nota: usa clip en X (mejor que hidden para rendimiento). */
#__nuxt {
  overflow-x: clip;     /* Bloquea desbordes laterales (evita scroll horizontal) */
  overflow-y: visible;  /* Permite que elementos absolutamente posicionados ‚Äúasomen‚Äù en Y */
}
/* =========================================
   TERMINA CSS: EVITAR DESBORDE
   ========================================= */



/* =========================================
   INICIA CSS: OCULTAR ELEMENTOS DE TRABAJO
   ========================================= */
/* Oculta contenedores de pruebas/previews en producci√≥n. */
#wrapperno,
#preview-containerno {
  display: none;        /* No renderiza estos nodos (quedan fuera del flujo) */
}
/* =========================================
   TERMINA CSS: OCULTAR ELEMENTOS DE TRABAJO
   ========================================= */



/* =========================================
   INICIA CSS: FUSIONAR IM√ÅGENES CON EL FONDO
   ========================================= */
/* Elimina ‚Äúoscuridad‚Äù usando composici√≥n (screen).
   √ötil sobre fondos oscuros/negros para integrar logos o PNGs. */
.fusion img {
  mix-blend-mode: screen; /* üî• La ‚Äúmagia‚Äù: aclara la imagen con el fondo */
  /* Recomendaci√≥n: aseg√∫rate de que el fondo no sea blanco puro, o el efecto ser√° m√≠nimo. */
}
/* =========================================
   TERMINA CSS: FUSIONAR IM√ÅGENES CON EL FONDO
   ========================================= */



/* =========================================
   INICIA CSS: SEPARACI√ìN ENTRE ELEMENTOS
   ========================================= */
/* Aplica espaciado consistente entre hijos directos de .separacion-elemnts > .inner.
   Requiere que el contenedor use display:flex o display:grid (gap funciona en ambos). */
.separacion-elemnts > .inner {
  gap: 40px;  /* Fuerza un espacio de 40px; usa !important por si el builder pisa estilos */
}

@media (max-width: 768px) {
    .separacion-elemnts > .inner {
        gap: 0px !important;
    }
}
/* =========================================
   TERMINA CSS: SEPARACI√ìN ENTRE ELEMENTOS
   ========================================= */



/* =========================================
   INICIA CSS: INVERTIR COLUMNAS EN M√ìVIL
   ========================================= */
/* Invierte el orden visual de los hijos en mobile (column-reverse) sin tocar el HTML. */
@media (max-width: 768px) {
  .invertir-elements > .inner {
    display: flex;                 /* Asegura contexto flex para poder invertir columnas */
    flex-direction: column-reverse !important; /* Coloca el √∫ltimo elemento arriba en m√≥vil */
  }
}
/* =========================================
   TERMINA CSS: INVERTIR COLUMNAS EN M√ìVIL
   ========================================= */


/* =========================================
   INICIA CSS DE CINTA DE TEXTO (marquee)
   ========================================= */

.marquee-container {
  width: 100%;           /* Usa todo el ancho disponible */
  overflow: hidden;      /* Oculta el contenido que se va desplazando fuera del contenedor */
}

.marquee-track {
  font-family: var(--headlinefont);  /* Tipograf√≠a configurable desde CSS global */
  color: white;
  font-size: 23px;
  font-weight: 500;
  display: flex;         /* Para que el track crezca en horizontal con su contenido */
  width: max-content;    /* El ancho se adapta al contenido; necesario para el bucle fluido */
  animation: scroll-left linear infinite; /* Animaci√≥n base; la duraci√≥n se setea v√≠a JS */
}

.marquee-text {
  white-space: nowrap;   /* Evita que el texto parta en varias l√≠neas */
  padding-right: 5px;    /* Espacio entre repeticiones/separadores */
}

@keyframes scroll-left {
  /* Del punto inicial‚Ä¶ */
  0%   { transform: translateX(0%); }
  /* ‚Ä¶al desplazamiento de media pista (duplicamos contenido para bucle). */
  100% { transform: translateX(-50%); }
}

/* Ocultamos saltos de l√≠nea reales dentro del carrusel;
   ser√°n reemplazados por separadores visuales en JS */
.marquee-text br { display: none; }

/* Estilo del separador inyectado (ej. ‚ú¶) */
.separator {
  padding: 0 10px;       /* Respiraci√≥n a ambos lados del separador */
  display: inline-block;
}

/* =========================================
   TERMINA CSS DE CINTA DE TEXTO (marquee)
   ========================================= */



/* =========================================
   COMIENZA CSS ANIMACIONES DE SCROLL (fade/slide)
   ========================================= */

/* Estados iniciales (ocultos + desplazados) */
.scroll-left,
.scroll-right,
.scroll-bottom,
.scroll-top {
  opacity: 0;            /* Elemento oculto inicialmente */
  transition: 0.8s all;  /* Transici√≥n suave para transform y opacity */
}

/* Desplazamientos iniciales seg√∫n la direcci√≥n deseada */
.scroll-left   { transform: translateX(-30px); } /* Entra desde la izquierda */
.scroll-right  { transform: translateX( 30px); } /* Entra desde la derecha  */
.scroll-bottom { transform: translateY( 80px); } /* Entra desde abajo       */
.scroll-top    { transform: translateY(-80px); } /* Entra desde arriba      */

/* Estado visible (se activa agregando la clase .ativo desde JS) */
.ativo {
  opacity: 1;            /* Hace visible el elemento */
  transition: 0.8s;      /* Mantiene la duraci√≥n de la animaci√≥n */
  transform: none;       /* IMPORTANTE: resetea cualquier translateX/Y a 0 para todos los casos */
  /* Nota: Usar transform: none evita conflictos entre X e Y y asegura que todas
           las variantes (.scroll-left/right/top/bottom) animen hacia su posici√≥n final (0,0). */
}

/* =========================================
   TERMINA CSS ANIMACIONES DE SCROLL
   ========================================= */


/* =========================================
   COMIENZA CSS BENTO REFLEJO 
   ========================================= */


.bento {
    border-radius: 20px;
    box-shadow: 1px -1px 0 0 #493D5C,-52px 98px 67px 0 rgb(0 0 0 / .19),-23px 44px 50px 0 rgb(0 0 0 / .32),-6px 11px 27px 0 rgb(0 0 0 / .36),0 0 29.2px 0 rgb(73 61 92 / .21) inset;
    overflow: hidden;
    transition: 0.5s ease;
    position: relative
}

.bento:hover::before {
    content: "";
    top: 0;
    left: 0;
    position: absolute;
    height: 100%;
    width: 80px;
    opacity: 0;
    filter: blur(25px);
    -webkit-filter: blur(25px);
    background: #fff;
    box-shadow: 0 0 30px 20px #fffa;
    transform: skewX(-30deg);
    mix-blend-mode: overlay;
    z-index: 2;
    pointer-events: none
}

@media (min-width: 767px) {
    .bento:hover::before {
        animation: brilho 1s ease-in-out
    }
}

@keyframes brilho {
    0% {
        opacity: 1;
        left: -50%
    }

    100% {
        opacity: 1;
        left: 150%
    }
}

.bento:hover {
    transform: scale(1.05) rotate(-2deg);
    filter: brightness(130%)
}


/* =========================================
   TERMINA CSS BENTO REFLEJO 
   ========================================= */

/* =========================================
   COmienza CSS CARD SCALE 
   ========================================= */

.card-scale-grupo .c-column {
    transition: transform 0.3s ease;
 /* a√±ade esta l√≠nea */
}

.card-scale-grupo .c-column:hover {
    transform: scale(1.1);
 /* usa 'transform' en lugar de 'scale' directamente */
}

/* version invidiviual */

.card-scale {
    transition: transform 0.3s ease;
 /* a√±ade esta l√≠nea */
}

.card-scale:hover {
    transform: scale(1.1);
 /* usa 'transform' en lugar de 'scale' directamente */
}

/* =========================================
   TERMINA CSS CARD SCALE 
   ========================================= */

/* =========================================
   COMIENZA CSS TRADUCTOR 
   ========================================= */
#gt_float_wrapper {
    scale: 0.7;
}

@media only screen and (max-width: 768px) {
  #gt_float_wrapper {
    top: 90% !important;
  }
}
/* =========================================
   TERMINA CSS TRADUCTOR 
   ========================================= */



